ENV['COCOAPODS_DISABLE_STATS'] = 'true'

platform :ios, '10.0'

install! 'cocoapods', :deterministic_uuids => false

require_relative '../node_modules/react-native-unimodules/cocoapods.rb'

target 'Wrench' do
  platform :ios, '10.0'

  react_path = '../node_modules/react-native'
  yoga_path = File.join(react_path, 'ReactCommon/yoga')

  pod 'React', :path => react_path, :subspecs => [
    'Core',
    'CxxBridge',
    'DevSupport',
    'RCTActionSheet',
    'RCTAnimation',
    'RCTCameraRoll',
    'RCTImage',
    'RCTLinkingIOS',
    'RCTNetwork',
    'RCTPushNotification',
    'RCTText',
    'RCTWebSocket',
  ]

  # the following dependencies are dependencies of React native itself.
  pod 'DoubleConversion', :podspec => File.join(react_path,'third-party-podspecs/DoubleConversion.podspec')
  pod 'Folly', :podspec => File.join(react_path,'third-party-podspecs/Folly.podspec')
  pod 'glog', :podspec => File.join(react_path,'third-party-podspecs/glog.podspec')
  pod 'yoga', :path => File.join(react_path, 'ReactCommon/yoga')

  # Third party deps podspec link
  pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'
  pod 'CodePush', :path => '../node_modules/react-native-code-push'
  pod 'react-native-camera', path: '../node_modules/react-native-camera'
  pod 'SentryReactNative', :path => '../node_modules/react-native-sentry'
  pod 'react-native-fast-image', :path => '../node_modules/react-native-fast-image'
  pod 'react-native-fbsdk', :path => '../node_modules/react-native-fbsdk'
  pod 'react-native-haptic-feedback', :path => '../node_modules/react-native-haptic-feedback'
  pod 'react-native-pinchable', :path => '../node_modules/react-native-pinchable'
  pod 'react-native-config', :path => '../node_modules/react-native-config'
  pod 'react-native-splash-screen', path: '../node_modules/react-native-splash-screen'
  pod 'react-native-video', :path => '../node_modules/react-native-video'
  pod 'react-native-webview', :path => '../node_modules/react-native-webview'
  pod 'react-native-netinfo', :path => '../node_modules/@react-native-community/netinfo'
  pod 'react-native-async-storage', :path => '../node_modules/@react-native-community/async-storage'
  pod 'RNDeviceInfo', :path => '../node_modules/react-native-device-info'
  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'
  pod 'RNRate', :path => '../node_modules/react-native-rate/ios'
  pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'
  pod 'RNScreens', :path => '../node_modules/react-native-screens'
  pod 'RNShare', :path => '../node_modules/react-native-share'
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions', :subspecs => [
    'Core',
    'Camera',
    'Notifications',
    'PhotoLibrary',
  ]

  # Required by Facebook
  pod 'FBSDKCoreKit'
  pod 'FBSDKLoginKit'
  pod 'FBSDKShareKit'

  # Required by Firebase
  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
  pod 'Firebase/Core'
  pod 'Firebase/DynamicLinks'
  pod 'Firebase/Messaging'
  pod 'Firebase/Performance'

  use_unimodules!

end

# The following is needed to ensure the "archive" step works in XCode.
# It removes React from the Pods project, as it is already included in the main project.
post_install do |installer|
  installer.pods_project.targets.each do |target|
    if target.name == "React"
      target.remove_from_project
    end

    # if target.name == 'react-native-config'
    #   phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
    #   phase.shell_script = "cd ../../"\
    #    " && RNC_ROOT=./node_modules/react-native-config/"\
    #    " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
    #    " && export BUILD_DIR=$RNC_ROOT/ios/ReactNativeConfig"\
    #    " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
    #   target.build_phases << phase
    #   target.build_phases.move(phase,0)
    # end
  end
end
