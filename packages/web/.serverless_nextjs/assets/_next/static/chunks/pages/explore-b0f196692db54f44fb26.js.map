{"version":3,"sources":["webpack://_N_E/./src/components/Popular/styles.ts","webpack://_N_E/./src/components/Popular/index.tsx","webpack://_N_E//Users/pontus.abrahamsson/Desktop/wrench/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?a833","webpack://_N_E/./src/components/Explore/index.tsx","webpack://_N_E/./src/components/ProjectTypes/styles.ts","webpack://_N_E/./src/components/ProjectTypes/index.tsx"],"names":["List","styled","div","DEVICE","TABLET","Title","UiTitle","Popular","t","useTranslation","usePaginatedQuery","ProjectsDocument","variables","type","first","edges","data","isFetching","fetchMore","hasNextPage","medium","color","map","node","key","id","image","cover","uri","title","slug","user","window","__NEXT_P","push","Explore","PostsDocument","column","paddingTop","config","ProjectTypes","loadMore","hasMore","loader","Base","props","theme","colors","Wrapper","span","selected","inverse","divider","selectedId","useProjectTypesQuery","loading","types","category","href","as","fontSize"],"mappings":"4MAIaA,EAAOC,UAAOC,IAAV,+DAAGD,CAAH,qTAQNE,IAAOC,QAgBLC,EAAQJ,kBAAOK,KAAV,gEAAGL,CAAH,yB,oBCcHM,IAnCf,WAAmB,IACTC,EAAMC,YAAe,WAArBD,EADS,EAQbE,4BAAkB,CAAC,YAAnBA,CAAgCC,mBAAkB,CACpDC,UAAW,CACTC,KAAM,UACNC,MAAO,KAPDC,EAJO,EAIfC,KAAQD,MAWV,OAfiB,EAKfE,WALe,EAMfC,UANe,EAOfC,YASA,EAAC,WAAD,KACE,EAAC,EAAD,CAAOC,QAAM,GAAEZ,EAAE,UACjB,EAAC,IAAD,CAAMa,MAAM,WAAWb,EAAE,gBAEzB,EAACR,EAAD,YACGe,QADH,IACGA,OADH,EACGA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,EAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,MAAMC,IAClBC,MAAON,EAAKM,MACZC,KAAMP,EAAKO,KACXC,KAAMR,EAAKQ,c,wBCjClBC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,WACA,WACE,OAAO,EAAQ,Y,uOCMjB7B,EAAQJ,kBAAOK,KAAV,qEAAGL,CAAH,yBAII,SAASkC,IAAU,MAM5BzB,4BAAkB,CAAC,SAAnBA,CAA6B0B,iBAJvBrB,EAFsB,EAE9BC,KAAQD,MAERG,GAJ8B,EAG9BD,WAH8B,EAI9BC,WACAC,EAL8B,EAK9BA,YAGF,OACE,EAAC,IAAD,CAAQkB,QAAM,EAACC,WAAY,IACzB,EAAC,IAAD,CACEC,OAAQ,CACNV,MAAO,aAIX,EAACW,EAAA,EAAD,MAEA,EAACjC,EAAA,EAAD,MAEA,EAAC,EAAD,CAAOa,QAAM,GAAb,gBACA,EAAC,IAAD,CAAgBqB,SAAUvB,EAAWwB,QAASvB,EAAawB,OAAQ,EAAC,IAAD,CAAQnB,IAAK,KAAhF,OACGT,QADH,IACGA,OADH,EACGA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,EAAC,IAAD,CAAMP,KAAMO,EAAMC,IAAKD,EAAKE,Y,oHCjCzBmB,EAAO3C,UAAOC,IAAV,+DAAGD,CAAH,iLAMD,SAAA4C,GAAK,OAAIA,EAAMC,MAAMC,OAAZ,WAQZC,EAAU/C,UAAOgD,KAAV,kEAAGhD,CAAH,0MAIE,SAAC4C,GAAD,OAAYA,EAAMK,SAAWL,EAAMC,MAAMC,OAAOI,QAAUN,EAAMC,MAAMC,OAAOK,W,oBCapFZ,IA5Bf,YAAsC,IAAda,EAAc,EAAdA,WAAc,EACVC,iCAAlBtC,EAD4B,EAC5BA,KAER,OAHoC,EACtBuC,QAGL,KAIP,EAACX,EAAD,KAOG5B,EAAKwC,MAAMlC,KAAI,SAACmC,GAAD,OACd,EAAC,IAAD,CAAMjC,IAAKiC,EAAShC,GAAIiC,KAAK,gBAAgBC,GAAE,mBAAcF,EAAShC,KACpE,EAACuB,EAAD,CAASE,SAAUO,EAAShC,KAAO4B,EAAYK,KAAK,KAClD,EAAC,IAAD,CAAME,SAAU,GAAIxC,QAAM,GACvBqC,EAAS5B,gB","file":"static/chunks/pages/explore-b0f196692db54f44fb26.js","sourcesContent":["import styled from 'styled-components'\nimport UiTitle from '../../ui/Title'\nimport { DEVICE } from '../../ui/constants'\n\nexport const List = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin-left: -40px;\n  margin-top: 50px;\n\n  @media ${DEVICE.TABLET} {\n    flex-direction: row;\n    flex-wrap: nowrap;\n    margin-left: -10px;\n    flex-flow: row nowrap;\n    overflow-y: scroll;\n    margin-right: -20px;\n\n    -webkit-overflow-scrolling: touch;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`\n\nexport const Title = styled(UiTitle)`\n  margin-bottom: 15px;\n`\n","// @ts-nocheck\nimport React, { Fragment } from 'react'\nimport { useTranslation } from 'i18n'\nimport { usePaginatedQuery, ProjectsDocument } from '@wrench/common'\nimport { Card, Text } from 'ui'\nimport { List, Title } from './styles'\n\nfunction Popular() {\n  const { t } = useTranslation('Popular')\n\n  const {\n    data: { edges },\n    isFetching,\n    fetchMore,\n    hasNextPage,\n  } = usePaginatedQuery(['projects'])(ProjectsDocument, {\n    variables: {\n      type: 'POPULAR',\n      first: 8,\n    },\n  })\n\n  return (\n    <Fragment>\n      <Title medium>{t('title')}</Title>\n      <Text color=\"neutral\">{t('description')}</Text>\n\n      <List>\n        {edges?.map(({ node }) => (\n          <Card\n            key={node.id}\n            image={node.cover.uri}\n            title={node.title}\n            slug={node.slug}\n            user={node.user}\n          />\n        ))}\n      </List>\n    </Fragment>\n  )\n}\n\nexport default Popular\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/explore\",\n      function () {\n        return require(\"private-next-pages/explore/index.ts\");\n      }\n    ]);\n  ","// @ts-nocheck\nimport InfiniteScroll from 'react-infinite-scroller'\nimport styled from 'styled-components'\nimport { usePaginatedQuery, PostsDocument } from '@wrench/common'\nimport Seo from 'utils/seo'\nimport { Post, Layout, Loader } from 'ui'\nimport UiTitle from 'ui/Title'\nimport Popular from 'components/Popular'\nimport ProjectTypes from 'components/ProjectTypes'\n\nconst Title = styled(UiTitle)`\n  margin-bottom: 50px;\n`\n\nexport default function Explore() {\n  const {\n    data: { edges },\n    isFetching,\n    fetchMore,\n    hasNextPage,\n  } = usePaginatedQuery(['posts'])(PostsDocument)\n\n  return (\n    <Layout column paddingTop={40}>\n      <Seo\n        config={{\n          title: 'Explore',\n        }}\n      />\n\n      <ProjectTypes />\n\n      <Popular />\n\n      <Title medium>Recent posts</Title>\n      <InfiniteScroll loadMore={fetchMore} hasMore={hasNextPage} loader={<Loader key={0} />}>\n        {edges?.map(({ node }) => (\n          <Post data={node} key={node.id} />\n        ))}\n      </InfiniteScroll>\n    </Layout>\n  )\n}\n","// @ts-nocheck\nimport styled from 'styled-components'\nimport { COLORS } from 'ui/constants'\n\nexport const Base = styled.div`\n  width: 100%;\n  margin-bottom: 50px;\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  background: ${props => props.theme.colors.default};\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const Wrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  border: 1px solid ${(props) => (props.selected ? props.theme.colors.inverse : props.theme.colors.divider)};\n  margin-right: 10px;\n  align-items: center;\n  justify-content: center;\n  padding-left: 35px;\n  padding-right: 35px;\n  white-space: nowrap;\n  cursor: pointer;\n`\n","// @ts-nocheck\nimport React from 'react'\nimport Link from 'next/link'\nimport { useProjectTypesQuery } from '@wrench/common'\nimport { Text } from 'ui'\nimport { Base, Wrapper } from './styles'\n\nfunction ProjectTypes({ selectedId }) {\n  const { data, loading } = useProjectTypesQuery()\n\n  if (loading) {\n    return null\n  }\n\n  return (\n    <Base>\n      {/* <Wrapper first>\n        <Text fontSize={15} medium>\n          {t('ProjectTypes:inspo')}\n        </Text>\n      </Wrapper> */}\n\n      {data.types.map((category) => (\n        <Link key={category.id} href=\"/explore/[id]\" as={`/explore/${category.id}`}>\n          <Wrapper selected={category.id === selectedId} href=\"/\">\n            <Text fontSize={15} medium>\n              {category.title}\n            </Text>\n          </Wrapper>\n        </Link>\n      ))}\n    </Base>\n  )\n}\n\nexport default ProjectTypes\n"],"sourceRoot":""}