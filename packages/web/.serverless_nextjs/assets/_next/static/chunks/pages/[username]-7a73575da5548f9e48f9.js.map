{"version":3,"sources":["webpack://_N_E//Users/pontus.abrahamsson/Desktop/wrench/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?6950","webpack://_N_E/./src/components/UserFollowingProjects/styles.ts","webpack://_N_E/./src/components/UserFollowingProjects/index.tsx","webpack://_N_E/./src/components/UserProjects/styles.ts","webpack://_N_E/./src/components/UserProjects/index.tsx","webpack://_N_E/./src/components/User/styles.ts","webpack://_N_E/./src/components/User/index.tsx","webpack://_N_E/./src/utils/url.ts"],"names":["window","__NEXT_P","push","Base","styled","div","Title","UiTitle","Inner","UiImage","DEVICE","TABLET","MOBILE_LARGE","List","UiText","UserFollowingProjects","username","isAuthenticated","t","useTranslation","router","useRouter","useFollowProjectMutation","followProject","useUserFollowingProjectsQuery","variables","first","data","loading","useModal","Modal","close","closeModal","Login","referral","asPath","showModal","color","name","user","firstName","style","display","flexWrap","marginBottom","projects","edges","map","node","key","id","project","onFollow","isFollower","permissions","optimisticResponse","__typename","followers","toggleFollow","Image","Box","Row","Content","Text","UserProjects","medium","fontSize","href","as","slug","source","cover","uri","width","height","title","lineHeight","count","totalCount","Top","Name","Left","Right","Info","User","usePaginatedQuery","UserDocument","fetchMore","isFetching","hasNextPage","url","params","fullName","top","avatarUrl","size","location","bio","website","marginTop","rel","test","config","description","openGraph","type","profile","lastName","images","alt","loadMore","hasMore","loader","length","withoutAvatar","getInitialProps","query"],"mappings":"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","file":"static/chunks/pages/[username]-7a73575da5548f9e48f9.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[username]\",\n      function () {\n        return require(\"private-next-pages/[username].ts\");\n      }\n    ]);\n  ","import styled from 'styled-components'\nimport UiText from 'ui/Text'\nimport UiTitle from 'ui/Title'\nimport UiImage from 'ui/Image'\nimport { DEVICE } from 'ui/constants'\n\nexport const Base = styled.div``\n\nexport const Title = styled(UiTitle)`\n  margin-bottom: 10px;\n`\n\nexport const Image = styled(UiImage)`\n  width: 87px;\n  height: 87px;\n`\n\nexport const Inner = styled.div`\n  width: 33.33%;\n  padding-bottom: 20px;\n  box-sizing: border-box;\n\n  @media ${DEVICE.TABLET} {\n    width: 50%;\n  }\n\n  @media ${DEVICE.MOBILE_LARGE} {\n    width: 100%;\n  }\n`\n\nexport const Box = styled.div`\n  width: 87px;\n  height: 87px;\n`\n\nexport const List = styled.div`\n  margin-top: 40px;\n`\n\nexport const Row = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n`\n\nexport const Content = styled.div`\n  margin-left: 15px;\n`\n\nexport const Text = styled(UiText)``\n","// @ts-nocheck\nimport React from 'react'\nimport { useTranslation } from 'i18n'\nimport { useUserFollowingProjectsQuery, useFollowProjectMutation } from '@wrench/common'\nimport { useRouter } from 'next/router'\nimport { useModal, Modal } from 'ui/Modal'\nimport Login from 'components/Login'\nimport { ProjectCard, Text } from 'ui'\nimport { Base, Title, List, Inner } from './styles'\n\nfunction UserFollowingProjects({ username, isAuthenticated }) {\n  const { t } = useTranslation('UserFollowingProjects')\n  const router = useRouter()\n\n  const [followProject] = useFollowProjectMutation()\n\n  const { data, loading } = useUserFollowingProjectsQuery({\n    variables: {\n      username,\n      first: 6,\n    },\n  })\n\n  const [showModal, closeModal] = useModal(() => (\n    <Modal close={closeModal}>\n      <Login closeModal={closeModal} referral={router.asPath} />\n    </Modal>\n  ))\n\n  const toggleFollow = (project) => {\n    if (!isAuthenticated) {\n      showModal()\n      return\n    }\n\n    const isFollower = !project.permissions.isFollower\n\n    followProject({\n      variables: {\n        id: project.id,\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        followProject: {\n          id: project.id,\n          ...project,\n          followers: {\n            ...project.followers,\n          },\n          permissions: {\n            ...project.permissions,\n            isFollower,\n          },\n          __typename: 'Project',\n        },\n      },\n    })\n  }\n\n  if (loading) {\n    return null\n  }\n\n  return (\n    <Base>\n      <Title>{t('title')}</Title>\n      <Text color=\"neutral\">\n        {t('description', {\n          name: data.user.firstName,\n        })}\n      </Text>\n\n      <List>\n        <div style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 50 }}>\n          {data.user.projects.edges.map(({ node }) => (\n            <Inner key={node.id}>\n              <ProjectCard key={node.id} project={node} onFollow={() => toggleFollow(node)} />\n            </Inner>\n          ))}\n        </div>\n      </List>\n    </Base>\n  )\n}\n\nexport default UserFollowingProjects\n","import styled from 'styled-components'\nimport UiText from 'ui/Text'\nimport UiImage from 'ui/Image'\nimport { DEVICE } from 'ui/constants'\n\nexport const Base = styled.div`\n  @media ${DEVICE.TABLET} {\n    margin-bottom: 50px;\n  }\n`\n\nexport const Image = styled(UiImage)`\n  width: 87px;\n  height: 87px;\n`\n\nexport const Box = styled.div`\n  width: 87px;\n  height: 87px;\n`\n\nexport const List = styled.div`\n  margin-top: 30px;\n\n  @media ${DEVICE.TABLET} {\n    display: flex;\n    width: 100%;\n    overflow: auto;\n  }\n`\n\nexport const Row = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n\n  @media ${DEVICE.TABLET} {\n    flex-direction: column;\n    width: 87px;\n    margin-right: 10px;\n  }\n`\n\nexport const Content = styled.div`\n  margin-left: 15px;\n\n  @media ${DEVICE.TABLET} {\n    margin-left: 0;\n  }\n`\n\nexport const Text = styled(UiText)`\n  @media ${DEVICE.TABLET} {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n","// @ts-nocheck\nimport React from 'react'\nimport Link from 'next/link'\nimport { useTranslation } from 'i18n'\nimport { Base, Row, Box, Content, Text, List, Image } from './styles'\n\nfunction UserProjects({ projects }) {\n  const { t } = useTranslation('UserProjects')\n\n  return (\n    <Base>\n      <Text medium fontSize={24}>\n        {t('title')}\n      </Text>\n\n      <List>\n        {projects.edges.map(({ node }) => (\n          <Link key={node.id} href=\"/project/[slug]\" as={`/project/${node.slug}`}>\n            <a>\n              <Row>\n                <Box>\n                  <Image source={node.cover.uri} width={90} height={90} />\n                </Box>\n                <Content>\n                  <Text>{node.title}</Text>\n                  <Text color=\"neutral\" fontSize={15} lineHeight={18}>\n                    {t('followers', { count: node.followers.totalCount })}\n                  </Text>\n                </Content>\n              </Row>\n            </a>\n          </Link>\n        ))}\n      </List>\n    </Base>\n  )\n}\n\nexport default UserProjects\n","import styled from 'styled-components'\nimport { DEVICE } from 'ui/constants'\n\nexport const Top = styled.div`\n  display: flex;\n  margin-bottom: 65px;\n`\n\nexport const Inner = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n\n  @media ${DEVICE.TABLET} {\n    flex-direction: column-reverse;\n  }\n`\n\nexport const Name = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  justify-content: center;\n`\n\nexport const Left = styled.div`\n  width: 100%;\n`\n\nexport const Right = styled.div`\n  margin-top: -120px;\n  width: 300px;\n\n  @media ${DEVICE.TABLET} {\n    margin-top: 0;\n    width: auto;\n  }\n`\n\nexport const Info = styled.div`\n  padding-top: 10px;\n`\n","// @ts-nocheck\nimport React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { usePaginatedQuery, UserDocument } from '@wrench/common'\nimport { useTranslation } from 'i18n'\nimport Seo from 'utils/seo'\nimport UserFollowingProjects from 'components/UserFollowingProjects'\nimport { Text, Avatar, Layout, Post, Loader } from 'ui'\nimport UserProjects from 'components/UserProjects'\nimport { withHttp } from 'utils/url'\nimport { Inner, Top, Name, Left, Right, Info } from './styles'\n\nfunction User({ username, isAuthenticated }) {\n  const { t } = useTranslation('User')\n\n  const {\n    data: { edges, user },\n    isFetching,\n    fetchMore,\n    hasNextPage,\n  } = usePaginatedQuery(['user', 'posts'])(UserDocument, {\n    variables: {\n      username,\n    },\n  })\n\n  if (!user) {\n    return null\n  }\n\n  const params = {\n    fullName: user.fullName,\n    username,\n  }\n\n  return (\n    <Layout\n      top={\n        <Top>\n          <Avatar uri={user.avatarUrl} size={80} />\n          <Name>\n            <Text medium fontSize={36} lineHeight={38}>\n              {user.fullName}\n            </Text>\n\n            {user.location || user.bio || user.website ? (\n              <Info>\n                {user.location && (\n                  <Text color=\"neutral\" fontSize={15}>\n                    {user.location}\n                  </Text>\n                )}\n\n                {user.bio && (\n                  <Text fontSize={15} style={{ marginTop: 5 }}>\n                    {user.bio}\n                  </Text>\n                )}\n\n                {user.website && (\n                  <Text fontSize={15} style={{ marginTop: 5 }}>\n                    <a rel=\"nofollow\" href={withHttp(user.website)}>\n                      {user.website}\n                    </a>\n                  </Text>\n                )}\n              </Info>\n            ) : null}\n          </Name>\n        </Top>\n      }\n    >\n      <Seo\n        config={{\n          title: t('title', params),\n          description: t('description', params),\n          openGraph: {\n            title: t('title', params),\n            description: t('description', params),\n            url: `https://wrench.cc/${username}`,\n            type: 'profile',\n            profile: {\n              firstName: user.firstName,\n              lastName: user.lastName,\n              username,\n            },\n            images: [\n              {\n                url: `${user.avatarUrl}?w=160&h=160&dpr=1`,\n                alt: t('imagealt'),\n                width: 160,\n                height: 160,\n              },\n            ],\n          },\n        }}\n      />\n\n      <Inner>\n        <Left>\n          <InfiniteScroll loadMore={fetchMore} hasMore={hasNextPage} loader={<Loader key={0} />}>\n            {edges.length ? (\n              edges.map(({ node }) => <Post data={node} key={node.id} withoutAvatar />)\n            ) : (\n              <UserFollowingProjects username={username} isAuthenticated={isAuthenticated} />\n            )}\n          </InfiniteScroll>\n        </Left>\n\n        {edges.length > 0 && (\n          <Right>\n            <UserProjects projects={user.projects} />\n          </Right>\n        )}\n      </Inner>\n    </Layout>\n  )\n}\n\nUser.getInitialProps = ({ query }) => query\n\nexport default User\n","export const withHttp = url => (!/^https?:\\/\\//i.test(url) ? `http://${url}` : url)\n"],"sourceRoot":""}