{"version":3,"sources":["webpack://_N_E//Users/pontus.abrahamsson/Desktop/wrench/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?8cf6","webpack://_N_E/./src/components/ProjectTypes/styles.ts","webpack://_N_E/./src/components/ProjectTypes/index.tsx","webpack://_N_E/./src/components/Categories/styles.ts","webpack://_N_E/./src/components/Categories/index.tsx"],"names":["window","__NEXT_P","push","Base","styled","div","props","theme","colors","Wrapper","span","selected","inverse","divider","ProjectTypes","selectedId","useProjectTypesQuery","data","loading","types","map","category","key","id","href","as","fontSize","medium","title","Card","UiTitle","UiCard","DEVICE","TABLET","List","Categories","useRouter","query","usePaginatedQuery","ProjectsDocument","variables","typeId","type","first","edges","fetchMore","hasNextPage","column","paddingTop","config","loadMore","hasMore","loader","node","image","cover","uri","slug","user"],"mappings":"6FACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,gBACA,WACE,OAAO,EAAQ,Y,oHCAVC,EAAOC,UAAOC,IAAV,+DAAGD,CAAH,iLAMD,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAZ,WAQZC,EAAUL,UAAOM,KAAV,kEAAGN,CAAH,0MAIE,SAACE,GAAD,OAAYA,EAAMK,SAAWL,EAAMC,MAAMC,OAAOI,QAAUN,EAAMC,MAAMC,OAAOK,W,oBCapFC,IA5Bf,YAAsC,IAAdC,EAAc,EAAdA,WAAc,EACVC,iCAAlBC,EAD4B,EAC5BA,KAER,OAHoC,EACtBC,QAGL,KAIP,EAACf,EAAD,KAOGc,EAAKE,MAAMC,KAAI,SAACC,GAAD,OACd,EAAC,IAAD,CAAMC,IAAKD,EAASE,GAAIC,KAAK,gBAAgBC,GAAE,mBAAcJ,EAASE,KACpE,EAACd,EAAD,CAASE,SAAUU,EAASE,KAAOR,EAAYS,KAAK,KAClD,EAAC,IAAD,CAAME,SAAU,GAAIC,QAAM,GACvBN,EAASO,e,6OChBXC,GAJQzB,kBAAO0B,KAAV,oEAAG1B,CAAH,yBAIEA,kBAAO2B,KAAV,mEAAG3B,CAAH,yEACN4B,IAAOC,SAWLC,EAAO9B,UAAOC,IAAV,mEAAGD,CAAH,iJAQN4B,IAAOC,Q,oBClBH,SAASE,IACtB,IACQZ,EADOa,sBACOC,MAAdd,GAF2B,EAQ/Be,4BAAkB,CAAC,YAAnBA,CAAgCC,mBAAkB,CACpDC,UAAW,CACTC,OAAQlB,EACRmB,KAAM,SACNC,MAAO,KAPDC,EALyB,EAKjC3B,KAAQ2B,MACRC,EANiC,EAMjCA,UACAC,EAPiC,EAOjCA,YASF,OACE,EAAC,IAAD,CAAQC,QAAM,EAACC,WAAY,IACzB,EAAC,IAAD,CACEC,OAAQ,CACNrB,MAAO,aAIX,EAACd,EAAA,EAAD,CAAcC,WAAYQ,IAG1B,EAAC,IAAD,CAAgB2B,SAAUL,EAAWM,QAASL,EAAaM,OAAQ,EAAC,IAAD,CAAQ9B,IAAK,KAC9E,EAACY,EAAD,KACGU,GACCA,EAAMxB,KAAI,gBAAGiC,EAAH,EAAGA,KAAH,OACR,EAAC,EAAD,CACE/B,IAAK+B,EAAK9B,GACV+B,MAAOD,EAAKE,MAAMC,IAClB5B,MAAOyB,EAAKzB,MACZ6B,KAAMJ,EAAKI,KACXC,KAAML,EAAKK,gB","file":"static/chunks/pages/explore/[id]-11a649871de5b823a8ba.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/explore/[id]\",\n      function () {\n        return require(\"private-next-pages/explore/[id]/index.tsx\");\n      }\n    ]);\n  ","// @ts-nocheck\nimport styled from 'styled-components'\nimport { COLORS } from 'ui/constants'\n\nexport const Base = styled.div`\n  width: 100%;\n  margin-bottom: 50px;\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  background: ${props => props.theme.colors.default};\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const Wrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  border: 1px solid ${(props) => (props.selected ? props.theme.colors.inverse : props.theme.colors.divider)};\n  margin-right: 10px;\n  align-items: center;\n  justify-content: center;\n  padding-left: 35px;\n  padding-right: 35px;\n  white-space: nowrap;\n  cursor: pointer;\n`\n","// @ts-nocheck\nimport React from 'react'\nimport Link from 'next/link'\nimport { useProjectTypesQuery } from '@wrench/common'\nimport { Text } from 'ui'\nimport { Base, Wrapper } from './styles'\n\nfunction ProjectTypes({ selectedId }) {\n  const { data, loading } = useProjectTypesQuery()\n\n  if (loading) {\n    return null\n  }\n\n  return (\n    <Base>\n      {/* <Wrapper first>\n        <Text fontSize={15} medium>\n          {t('ProjectTypes:inspo')}\n        </Text>\n      </Wrapper> */}\n\n      {data.types.map((category) => (\n        <Link key={category.id} href=\"/explore/[id]\" as={`/explore/${category.id}`}>\n          <Wrapper selected={category.id === selectedId} href=\"/\">\n            <Text fontSize={15} medium>\n              {category.title}\n            </Text>\n          </Wrapper>\n        </Link>\n      ))}\n    </Base>\n  )\n}\n\nexport default ProjectTypes\n","// @ts-nocheck\nimport styled from 'styled-components'\nimport { DEVICE } from 'ui/constants'\nimport UiTitle from 'ui/Title'\nimport UiCard from 'ui/Card'\n\nexport const Title = styled(UiTitle)`\n  margin-bottom: 50px;\n`\n\nexport const Card = styled(UiCard)`\n  @media ${DEVICE.TABLET} {\n    width: 100%;\n\n    div {\n      width: 100%;\n      height: 100%;\n      max-height: 250px;\n    }\n  }\n`\n\nexport const List = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin-left: -40px;\n  margin-top: 50px;\n\n  @media ${DEVICE.TABLET} {\n    margin-left: 0px;\n  }\n`\n","// @ts-nocheck\nimport React from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\nimport Seo from 'utils/seo'\nimport { usePaginatedQuery, ProjectsDocument } from '@wrench/common'\nimport { Post, Layout, Loader } from 'ui'\nimport Popular from 'components/Popular'\nimport ProjectTypes from 'components/ProjectTypes'\nimport { List, Title, Card } from './styles'\n\nexport default function Categories() {\n  const router = useRouter()\n  const { id } = router.query\n\n  const {\n    data: { edges },\n    fetchMore,\n    hasNextPage,\n  } = usePaginatedQuery(['projects'])(ProjectsDocument, {\n    variables: {\n      typeId: id,\n      type: 'RECENT',\n      first: 8,\n    },\n  })\n\n  return (\n    <Layout column paddingTop={40}>\n      <Seo\n        config={{\n          title: 'Explore',\n        }}\n      />\n\n      <ProjectTypes selectedId={id} />\n\n      {/* <Title medium>Recent posts</Title> */}\n      <InfiniteScroll loadMore={fetchMore} hasMore={hasNextPage} loader={<Loader key={0} />}>\n        <List>\n          {edges &&\n            edges.map(({ node }) => (\n              <Card\n                key={node.id}\n                image={node.cover.uri}\n                title={node.title}\n                slug={node.slug}\n                user={node.user}\n              />\n            ))}\n        </List>\n      </InfiniteScroll>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}