require "json"

xcodeproj = "packages/mobile/ios/Wrench.xcodeproj"
workspace = "packages/mobile/ios/Wrench.xcworkspace"
android = "packages/mobile/android"

package = File.read("../package.json")
version = JSON.parse(package)["version"]
build_number = ENV["BUILD_NUMBER"]

# TODO: Add bundle size, apk and ipa size
def slack_notification(platform, build_number, version, success)
  slack(
    message: "Wrench (#{platform})",
    channel: "#release",
    success: success,
    use_webhook_configured_username_and_icon: true,
    payload: { 
      "Build" => build_number,
      "Version" => version,
      "Build Date" => Time.new.to_s
    },
    default_payloads: [:git_branch, :git_author],
    attachment_properties: { 
      thumb_url: "https://edge-files.wrench.cc/static/email/logo.jpg?w=60&h=60&dpr=3",
    }
  )
end

# Slack error message
error do |lane, exception|
  slack_notification(
    lane.to_s == 'ios' ? 'iOS' : 'Android',
    version, 
    build_number,
    false,
  )
end

# iOS Beta
lane :ios do
  setup_ci(force: true)
  cocoapods(
    podfile: "packages/mobile/ios/Podfile"
  )
  match(app_identifier: 'cc.wrench.app', type: 'appstore', readonly: true )
  increment_build_number({ build_number: build_number, xcodeproj: xcodeproj })
  increment_version_number({ version_number: build_number, xcodeproj: xcodeproj }) # TODO: Change to version if possible to reset in Apple
  sh "actions/create-env"
  gym(
    workspace: workspace,
    scheme: "Wrench",
    clean: true,
    export_method: "app-store",
    build_path: "./.builds",
    output_directory: "./.builds"
  )
  pilot(skip_waiting_for_build_processing: true)
  sentry_upload_dsym(
    project_slug: "wrench",
    dsym_path: './.builds/Wrench.app.dSYM.zip',
  )
  sentry_upload_sourcemap(
    project_slug: 'wrench',
    version: version,
    dist: version,
    sourcemap: './.builds/ios.bundle.map',
    rewrite: true
  )
  sentry_create_release(
    project_slug: 'wrench',
    version: version,
    finalize: true 
  )
  slack_notification(
   'iOS', 
    version, 
    build_number,
    true
  )
end

# Android Beta
lane :android do
  sh "actions/create-env"
  gradle(
    task: 'clean',
    project_dir: android
  )
  gradle(
    project_dir: android,
    task: 'bundle',
    build_type: 'Release',
    print_command: false,
    properties: {
      "versionCode" => build_number,
      "versionName" => version,
    }
  )
  supply(
    track: 'internal',
    skip_upload_metadata: true,
    skip_upload_images: true,
    skip_upload_screenshots: true
  )
  slack_notification(
    'Android', 
    version,
    build_number,
    true
  )
end
