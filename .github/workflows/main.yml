name: 'Deploy workflow'
on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      # - name: Build
      #   uses: borales/actions-yarn@v2.0.0
      #   with:
      #     cmd: build:api

      - name: Build & Push to AWS ECR
        uses: mr-smithers-excellent/docker-build-push@v1.0
        with:
          image: api
          tag: latest
          dockerfile: packages/api/Dockerfile
          registry: 719104767000.dkr.ecr.eu-west-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update service
        run: |
          echo Register task definition...
          TASK_DEFINITION=$(aws ecs describe-task-definition --region eu-west-1 --task-definition service_api)
          NEW_TASK_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities)')
          NEW_TASK_INFO=$(aws ecs register-task-definition --region eu-west-1 --cli-input-json "$NEW_TASK_DEFINTIION")
          NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
          echo Updating service...
          aws ecs update-service --cluster wrench --service api --task-definition service_api:${NEW_REVISION} --region eu-west-1
        env:
          IMAGE: 719104767000.dkr.ecr.eu-west-1.amazonaws.com/api:latest
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
